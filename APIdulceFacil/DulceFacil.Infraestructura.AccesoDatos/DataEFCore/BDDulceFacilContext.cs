// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace DulceFacil.Infraestructura.AccesoDatos;

public partial class BDDulceFacilContext : DbContext
{
    public BDDulceFacilContext()
    {
    }

    public BDDulceFacilContext(DbContextOptions<BDDulceFacilContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Cliente> Cliente { get; set; }

    public virtual DbSet<DetalleVenta> DetalleVenta { get; set; }

    public virtual DbSet<Producto> Producto { get; set; }

    public virtual DbSet<PuntoDeVenta> PuntoDeVenta { get; set; }

    public virtual DbSet<RutaEntrega> RutaEntrega { get; set; }

    public virtual DbSet<Venta> Venta { get; set; }

    public virtual DbSet<ZonaGeografica> ZonaGeografica { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=StephyR;Initial Catalog=BDDulceFacil;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.HasKey(e => e.ClienteID).HasName("PK__Cliente__71ABD0A730928DD2");

            entity.Property(e => e.Correo).HasMaxLength(100);
            entity.Property(e => e.Direccion).HasMaxLength(200);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Telefono).HasMaxLength(20);
            entity.Property(e => e.TipoCliente).HasMaxLength(20);
        });

        modelBuilder.Entity<DetalleVenta>(entity =>
        {
            entity.HasKey(e => e.DetalleID).HasName("PK__DetalleV__6E19D6FA2B8D5176");

            entity.Property(e => e.PrecioUnitario).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Producto).WithMany(p => p.DetalleVenta)
                .HasForeignKey(d => d.ProductoID)
                .HasConstraintName("FK__DetalleVe__Produ__4D94879B");

            entity.HasOne(d => d.Venta).WithMany(p => p.DetalleVenta)
                .HasForeignKey(d => d.VentaID)
                .HasConstraintName("FK__DetalleVe__Venta__4CA06362");
        });

        modelBuilder.Entity<Producto>(entity =>
        {
            entity.HasKey(e => e.ProductoID).HasName("PK__Producto__A430AE8373FB5805");

            entity.Property(e => e.Descripcion).HasMaxLength(255);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Precio).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<PuntoDeVenta>(entity =>
        {
            entity.HasKey(e => e.PuntoID).HasName("PK__PuntoDeV__7D360793FDEAA6EE");

            entity.Property(e => e.Direccion).HasMaxLength(200);
            entity.Property(e => e.Nombre).HasMaxLength(100);

            entity.HasOne(d => d.Zona).WithMany(p => p.PuntoDeVenta)
                .HasForeignKey(d => d.ZonaID)
                .HasConstraintName("FK__PuntoDeVe__ZonaI__45F365D3");
        });

        modelBuilder.Entity<RutaEntrega>(entity =>
        {
            entity.HasKey(e => e.RutaID).HasName("PK__RutaEntr__7B6199EE30477E32");

            entity.Property(e => e.Descripcion).HasMaxLength(255);
            entity.Property(e => e.Estado).HasMaxLength(50);
            entity.Property(e => e.Fecha).HasColumnType("datetime");

            entity.HasOne(d => d.Zona).WithMany(p => p.RutaEntrega)
                .HasForeignKey(d => d.ZonaID)
                .HasConstraintName("FK__RutaEntre__ZonaI__5070F446");
        });

        modelBuilder.Entity<Venta>(entity =>
        {
            entity.HasKey(e => e.VentaID).HasName("PK__Venta__5B41514C6B06A608");

            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.Total).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Cliente).WithMany(p => p.Venta)
                .HasForeignKey(d => d.ClienteID)
                .HasConstraintName("FK__Venta__ClienteID__48CFD27E");

            entity.HasOne(d => d.Punto).WithMany(p => p.Venta)
                .HasForeignKey(d => d.PuntoID)
                .HasConstraintName("FK__Venta__PuntoID__49C3F6B7");
        });

        modelBuilder.Entity<ZonaGeografica>(entity =>
        {
            entity.HasKey(e => e.ZonaID).HasName("PK__ZonaGeog__1F1E05563A2DC678");

            entity.Property(e => e.Coordenadas).HasMaxLength(100);
            entity.Property(e => e.Nombre).HasMaxLength(100);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}